// <auto-generated />
using System;
using Covauto.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Covauto.Domain.Migrations
{
    [DbContext(typeof(CovautoContext))]
    [Migration("20250509091706_RandomShit")]
    partial class RandomShit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Covauto.Domain.Entities.Adres", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Huisnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Plaats")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RitID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RitID");

                    b.ToTable("Adres");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Huisnummer = "6A",
                            Land = "Nederland",
                            Order = 1,
                            Plaats = "Doetinchem",
                            RitID = 1,
                            Straat = "Expiditieweg"
                        },
                        new
                        {
                            ID = 2,
                            Huisnummer = "49",
                            Land = "Nederland",
                            Order = 2,
                            Plaats = "Doetinchem",
                            RitID = 1,
                            Straat = "J.F. Kennedylaan"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Auto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Beschikbaar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KilometerStand")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Autos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Beschikbaar = true,
                            KilometerStand = 1000,
                            Kleur = "Zwart",
                            Merk = "Honda",
                            Model = "Civic"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Gebruiker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Admin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Gebruiker");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Achternaam = "Peter",
                            Admin = true,
                            Voornaam = "Bas"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Rit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutoID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<int>("GebruikerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kilometers")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("AutoID");

                    b.HasIndex("GebruikerID");

                    b.ToTable("Rit");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AutoID = 1,
                            Datum = new DateTime(2025, 5, 9, 11, 17, 5, 764, DateTimeKind.Local).AddTicks(1884),
                            GebruikerID = 1,
                            Kilometers = 1000
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Adres", b =>
                {
                    b.HasOne("Covauto.Domain.Entities.Rit", "Rit")
                        .WithMany("Adressen")
                        .HasForeignKey("RitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rit");
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Rit", b =>
                {
                    b.HasOne("Covauto.Domain.Entities.Auto", "Auto")
                        .WithMany("Ritten")
                        .HasForeignKey("AutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Covauto.Domain.Entities.Gebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auto");

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Auto", b =>
                {
                    b.Navigation("Ritten");
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Rit", b =>
                {
                    b.Navigation("Adressen");
                });
#pragma warning restore 612, 618
        }
    }
}
