// <auto-generated />
using Covauto.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Covauto.Domain.Migrations
{
    [DbContext(typeof(CovautoContext))]
    [Migration("20250425100721_Rit")]
    partial class Rit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Covauto.Domain.Entities.Adres", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Huisnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plaats")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Adres");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Huisnummer = "49",
                            Plaats = "Doetinchem",
                            Straat = "J.F. Kennedylaan"
                        },
                        new
                        {
                            ID = 2,
                            Huisnummer = "6A",
                            Plaats = "Doetinchem",
                            Straat = "Expiditieweg"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Auto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Beschikbaar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KilometerStand")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Autos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Beschikbaar = true,
                            KilometerStand = 1000,
                            Naam = "Auto 1"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Gebruiker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Admin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Gebruiker");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Admin = true,
                            Naam = "Bas"
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Rit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AfkomstID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BestemmingID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GebruikerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kilometers")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("AfkomstID");

                    b.HasIndex("AutoID");

                    b.HasIndex("BestemmingID");

                    b.HasIndex("GebruikerID");

                    b.ToTable("Rit");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AfkomstID = 2,
                            AutoID = 1,
                            BestemmingID = 1,
                            GebruikerID = 1,
                            Kilometers = 1000
                        });
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Rit", b =>
                {
                    b.HasOne("Covauto.Domain.Entities.Adres", "Afkomst")
                        .WithMany()
                        .HasForeignKey("AfkomstID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Covauto.Domain.Entities.Auto", "Auto")
                        .WithMany("Ritten")
                        .HasForeignKey("AutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Covauto.Domain.Entities.Adres", "Bestemming")
                        .WithMany()
                        .HasForeignKey("BestemmingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Covauto.Domain.Entities.Gebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afkomst");

                    b.Navigation("Auto");

                    b.Navigation("Bestemming");

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Covauto.Domain.Entities.Auto", b =>
                {
                    b.Navigation("Ritten");
                });
#pragma warning restore 612, 618
        }
    }
}
